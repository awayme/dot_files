global !p
def diary_frame(delta=1):
    #import datetime
    from datetime import date, timedelta
    #da = datetime.datetime.now()
    da = date.today() - timedelta(delta)
    # return standard SOA formatted serial for today
    return da.strftime("%Y-%m-%d %A")

def today_date_iso():
    import datetime
    now = datetime.datetime.now()
    return now.strftime("%Y-%m-%d")

def now_time():
    import datetime
    now = datetime.datetime.now()
    return now.strftime("%H:%M")

def time_stamp_iso():
    import datetime
    now = datetime.datetime.now()
    return now.strftime("%Y-%m-%d %H:%M")

endglobal

# snippet dlog "daily log" b
# `!p snip.rv = diary_frame(0)` {{{
# ${0}
# }}}}}}}}}}}}}}}}}}}}}}}}}}
# conflict/difficulty
# 3 things/today's most important tasks
# 1. SMART principle
# 2. Estimate time-consuming
# 每天浏览人生目标，确保每天都会做一些事来推进
# 四象限定优先级
# ==========================
# endsnippet


snippet dlog "daily log" b
`!p snip.rv = diary_frame(0)` {{{
${0}

>> PDCA
1 review
2 workout失败原因

}}}}}}}}}}}}}}}}}}}}}}}}}}

endsnippet

snippet dlog1 "daily log" b
`!p snip.rv = diary_frame(1)` {{{
${0}
}}}}}}}}}}}}}}}}}}}}}}}}}}

endsnippet

snippet dlog2 "daily log" b
`!p snip.rv = diary_frame(2)` {{{
${0}
}}}}}}}}}}}}}}}}}}}}}}}}}}

endsnippet

snippet dlog3 "daily log" b
`!p snip.rv = diary_frame(3)` {{{
${0}
}}}}}}}}}}}}}}}}}}}}}}}}}}

endsnippet

snippet dlog4 "daily log" b
`!p snip.rv = diary_frame(4)` {{{
${0}
}}}}}}}}}}}}}}}}}}}}}}}}}}

endsnippet

snippet now "Now" b
`!p snip.rv = time_stamp_iso()`
endsnippet

snippet dreminder "debugflag" b
#@TODO:REMOVE DEBUG
endsnippet

snippet strftime "import now and format" b
from datetime import datetime
datetime.now().strftime("%Y-%m-%d %H:%M:%S")
endsnippet

snippet exit "force exit" b
import os; os._exit(1)
endsnippet
